{
	"id": "57fb58e6470b3f93f762047e6dc371b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol": {
				"content": "// SPDX-License-Identifier: MIT License\npragma solidity ^0.8.13;\n\nimport { MockCallee } from \"./MockCallee.sol\";\n\ncontract MockCall4 {\n\n    address public constant CALLER = 0x6dfc34609a05bC22319fA4Cce1d1E2929548c0D7;\n    address public constant CALLEE = 0xb0EdA4f836aF0F8Ca667700c42fcEFA0742ae2B5;\n\n    // EXTCODECOPY doesn't show these whereas solc does\n    bytes4 selector = MockCallee.coolFunc.selector;\n    bytes4 anotherSelector = bytes4(keccak256(bytes(\"fakeFunc(uint256)\")));\n    \n    function dopeFunction() public {\n        // solc doesn't show that there is a CALL opcode here, but EXTCODECOPY does\n        (bool success, bytes memory data) = CALLEE.call(abi.encodeWithSelector(MockCallee.niceFunc.selector, 1));\n    }\n\n    function anotherDopeFunction() public {\n        // solc doesn't show that there is a CALL opcode here, but EXTCODECOPY does\n        (bool success, bytes memory data) = CALLEE.call(abi.encodeWithSelector(MockCallee.coolFunc.selector, 1));\n    }\n}"
			},
			"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol": {
				"content": "// SPDX-License-Identifier: MIT License\npragma solidity ^0.8.13;\n\ncontract MockCallee {\n\n    uint coolNum = 0;\n\n    function fakeFunc(uint256 num) public returns (uint) {\n        coolNum = num;\n        return 1;\n    }\n\n    function niceFunc(uint256 num) public returns (uint) {\n        coolNum += num;\n        return 2;\n    }\n\n    function coolFunc(uint256 num) public returns (uint) {\n        coolNum += num;\n        return 1;\n    }\n\n    function weirdFunc(uint256 num) public returns (uint) {\n        coolNum += num;\n        return 2;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol": {
				"MockCall4": {
					"abi": [
						{
							"inputs": [],
							"name": "CALLEE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CALLER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "anotherDopeFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dopeFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":114:979  contract MockCall4 {... */\n  mstore(0x40, 0x80)\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":377:405  MockCallee.coolFunc.selector */\n  shl(0xe0, 0xa7c6047c)\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":359:405  bytes4 selector = MockCallee.coolFunc.selector */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xe0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":453:479  bytes(\"fakeFunc(uint256)\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x66616b6546756e632875696e7432353629000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":443:480  keccak256(bytes(\"fakeFunc(uint256)\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":411:481  bytes4 anotherSelector = bytes4(keccak256(bytes(\"fakeFunc(uint256)\"))) */\n  0x00\n  exp(0x0100, 0x04)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xe0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":114:979  contract MockCall4 {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":114:979  contract MockCall4 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x863dabb4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb04bd97f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb923b370\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfd60d284\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":140:215  address public constant CALLER = 0x6dfc34609a05bC22319fA4Cce1d1E2929548c0D7 */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":492:728  function dopeFunction() public {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":221:296  address public constant CALLEE = 0xb0EdA4f836aF0F8Ca667700c42fcEFA0742ae2B5 */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":734:977  function anotherDopeFunction() public {... */\n    tag_6:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":140:215  address public constant CALLER = 0x6dfc34609a05bC22319fA4Cce1d1E2929548c0D7 */\n    tag_8:\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":173:215  0x6dfc34609a05bC22319fA4Cce1d1E2929548c0D7 */\n      0x6dfc34609a05bc22319fa4cce1d1e2929548c0d7\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":140:215  address public constant CALLER = 0x6dfc34609a05bC22319fA4Cce1d1E2929548c0D7 */\n      dup2\n      jump\t// out\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":492:728  function dopeFunction() public {... */\n    tag_12:\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":618:630  bool success */\n      0x00\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":632:649  bytes memory data */\n      dup1\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":254:296  0xb0EdA4f836aF0F8Ca667700c42fcEFA0742ae2B5 */\n      0xb0eda4f836af0f8ca667700c42fcefa0742ae2b5\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":653:664  CALLEE.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":688:716  MockCallee.niceFunc.selector */\n      shl(0xe0, 0xa7c52d6e)\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":718:719  1 */\n      0x01\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":665:720  abi.encodeWithSelector(MockCallee.niceFunc.selector, 1) */\n      add(0x24, mload(0x40))\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":653:721  CALLEE.call(abi.encodeWithSelector(MockCallee.niceFunc.selector, 1)) */\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_25\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_24)\n    tag_25:\n      0x60\n      swap2\n      pop\n    tag_24:\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":617:721  (bool success, bytes memory data) = CALLEE.call(abi.encodeWithSelector(MockCallee.niceFunc.selector, 1)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":523:728  {... */\n      pop\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":492:728  function dopeFunction() public {... */\n      jump\t// out\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":221:296  address public constant CALLEE = 0xb0EdA4f836aF0F8Ca667700c42fcEFA0742ae2B5 */\n    tag_14:\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":254:296  0xb0EdA4f836aF0F8Ca667700c42fcEFA0742ae2B5 */\n      0xb0eda4f836af0f8ca667700c42fcefa0742ae2b5\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":221:296  address public constant CALLEE = 0xb0EdA4f836aF0F8Ca667700c42fcEFA0742ae2B5 */\n      dup2\n      jump\t// out\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":734:977  function anotherDopeFunction() public {... */\n    tag_17:\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":867:879  bool success */\n      0x00\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":881:898  bytes memory data */\n      dup1\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":254:296  0xb0EdA4f836aF0F8Ca667700c42fcEFA0742ae2B5 */\n      0xb0eda4f836af0f8ca667700c42fcefa0742ae2b5\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":902:913  CALLEE.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":937:965  MockCallee.coolFunc.selector */\n      shl(0xe0, 0xa7c6047c)\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":967:968  1 */\n      0x01\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":914:969  abi.encodeWithSelector(MockCallee.coolFunc.selector, 1) */\n      add(0x24, mload(0x40))\n      tag_27\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":902:970  CALLEE.call(abi.encodeWithSelector(MockCallee.coolFunc.selector, 1)) */\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_28:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_31\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_30)\n    tag_31:\n      0x60\n      swap2\n      pop\n    tag_30:\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":866:970  (bool success, bytes memory data) = CALLEE.call(abi.encodeWithSelector(MockCallee.coolFunc.selector, 1)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":772:977  {... */\n      pop\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":734:977  function anotherDopeFunction() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_32:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_33:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_47\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_32\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_34:\n        /* \"#utility.yul\":328:352   */\n      tag_49\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_33\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_10:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_51\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_34\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:678   */\n    tag_35:\n        /* \"#utility.yul\":638:645   */\n      0x00\n        /* \"#utility.yul\":667:672   */\n      dup2\n        /* \"#utility.yul\":656:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:770   */\n    tag_36:\n        /* \"#utility.yul\":719:726   */\n      0x00\n        /* \"#utility.yul\":759:763   */\n      0xff\n        /* \"#utility.yul\":752:757   */\n      dup3\n        /* \"#utility.yul\":748:764   */\n      and\n        /* \"#utility.yul\":737:764   */\n      swap1\n      pop\n        /* \"#utility.yul\":684:770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":776:836   */\n    tag_37:\n        /* \"#utility.yul\":804:807   */\n      0x00\n        /* \"#utility.yul\":825:830   */\n      dup2\n        /* \"#utility.yul\":818:830   */\n      swap1\n      pop\n        /* \"#utility.yul\":776:836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":842:996   */\n    tag_38:\n        /* \"#utility.yul\":898:907   */\n      0x00\n        /* \"#utility.yul\":931:990   */\n      tag_56\n        /* \"#utility.yul\":947:989   */\n      tag_57\n        /* \"#utility.yul\":956:988   */\n      tag_58\n        /* \"#utility.yul\":982:987   */\n      dup5\n        /* \"#utility.yul\":956:988   */\n      tag_35\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":947:989   */\n      tag_37\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":931:990   */\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":918:990   */\n      swap1\n      pop\n        /* \"#utility.yul\":842:996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1002:1145   */\n    tag_39:\n        /* \"#utility.yul\":1095:1138   */\n      tag_60\n        /* \"#utility.yul\":1132:1137   */\n      dup2\n        /* \"#utility.yul\":1095:1138   */\n      tag_38\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1090:1093   */\n      dup3\n        /* \"#utility.yul\":1083:1139   */\n      mstore\n        /* \"#utility.yul\":1002:1145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1151:1385   */\n    tag_20:\n        /* \"#utility.yul\":1250:1254   */\n      0x00\n        /* \"#utility.yul\":1288:1290   */\n      0x20\n        /* \"#utility.yul\":1277:1286   */\n      dup3\n        /* \"#utility.yul\":1273:1291   */\n      add\n        /* \"#utility.yul\":1265:1291   */\n      swap1\n      pop\n        /* \"#utility.yul\":1301:1378   */\n      tag_62\n        /* \"#utility.yul\":1375:1376   */\n      0x00\n        /* \"#utility.yul\":1364:1373   */\n      dup4\n        /* \"#utility.yul\":1360:1377   */\n      add\n        /* \"#utility.yul\":1351:1357   */\n      dup5\n        /* \"#utility.yul\":1301:1378   */\n      tag_39\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1151:1385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1391:1489   */\n    tag_40:\n        /* \"#utility.yul\":1442:1448   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1460:1482   */\n      swap1\n      pop\n        /* \"#utility.yul\":1391:1489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1495:1642   */\n    tag_41:\n        /* \"#utility.yul\":1596:1607   */\n      0x00\n        /* \"#utility.yul\":1633:1636   */\n      dup2\n        /* \"#utility.yul\":1618:1636   */\n      swap1\n      pop\n        /* \"#utility.yul\":1495:1642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1648:1955   */\n    tag_42:\n        /* \"#utility.yul\":1716:1717   */\n      0x00\n        /* \"#utility.yul\":1726:1839   */\n    tag_66:\n        /* \"#utility.yul\":1740:1746   */\n      dup4\n        /* \"#utility.yul\":1737:1738   */\n      dup2\n        /* \"#utility.yul\":1734:1747   */\n      lt\n        /* \"#utility.yul\":1726:1839   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1825:1826   */\n      dup1\n        /* \"#utility.yul\":1820:1823   */\n      dup3\n        /* \"#utility.yul\":1816:1827   */\n      add\n        /* \"#utility.yul\":1810:1828   */\n      mload\n        /* \"#utility.yul\":1806:1807   */\n      dup2\n        /* \"#utility.yul\":1801:1804   */\n      dup5\n        /* \"#utility.yul\":1797:1808   */\n      add\n        /* \"#utility.yul\":1790:1829   */\n      mstore\n        /* \"#utility.yul\":1762:1764   */\n      0x20\n        /* \"#utility.yul\":1759:1760   */\n      dup2\n        /* \"#utility.yul\":1755:1765   */\n      add\n        /* \"#utility.yul\":1750:1765   */\n      swap1\n      pop\n        /* \"#utility.yul\":1726:1839   */\n      jump(tag_66)\n    tag_68:\n        /* \"#utility.yul\":1857:1863   */\n      dup4\n        /* \"#utility.yul\":1854:1855   */\n      dup2\n        /* \"#utility.yul\":1851:1864   */\n      gt\n        /* \"#utility.yul\":1848:1949   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1928:1934   */\n      dup5\n        /* \"#utility.yul\":1923:1926   */\n      dup5\n        /* \"#utility.yul\":1919:1935   */\n      add\n        /* \"#utility.yul\":1912:1939   */\n      mstore\n        /* \"#utility.yul\":1848:1949   */\n    tag_69:\n        /* \"#utility.yul\":1697:1955   */\n      pop\n        /* \"#utility.yul\":1648:1955   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1961:2334   */\n    tag_43:\n        /* \"#utility.yul\":2065:2068   */\n      0x00\n        /* \"#utility.yul\":2093:2131   */\n      tag_71\n        /* \"#utility.yul\":2125:2130   */\n      dup3\n        /* \"#utility.yul\":2093:2131   */\n      tag_40\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2147:2235   */\n      tag_72\n        /* \"#utility.yul\":2228:2234   */\n      dup2\n        /* \"#utility.yul\":2223:2226   */\n      dup6\n        /* \"#utility.yul\":2147:2235   */\n      tag_41\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2140:2235   */\n      swap4\n      pop\n        /* \"#utility.yul\":2244:2296   */\n      tag_73\n        /* \"#utility.yul\":2289:2295   */\n      dup2\n        /* \"#utility.yul\":2284:2287   */\n      dup6\n        /* \"#utility.yul\":2277:2281   */\n      0x20\n        /* \"#utility.yul\":2270:2275   */\n      dup7\n        /* \"#utility.yul\":2266:2282   */\n      add\n        /* \"#utility.yul\":2244:2296   */\n      tag_42\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2321:2327   */\n      dup1\n        /* \"#utility.yul\":2316:2319   */\n      dup5\n        /* \"#utility.yul\":2312:2328   */\n      add\n        /* \"#utility.yul\":2305:2328   */\n      swap2\n      pop\n        /* \"#utility.yul\":2069:2334   */\n      pop\n        /* \"#utility.yul\":1961:2334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2340:2611   */\n    tag_22:\n        /* \"#utility.yul\":2470:2473   */\n      0x00\n        /* \"#utility.yul\":2492:2585   */\n      tag_75\n        /* \"#utility.yul\":2581:2584   */\n      dup3\n        /* \"#utility.yul\":2572:2578   */\n      dup5\n        /* \"#utility.yul\":2492:2585   */\n      tag_43\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2485:2585   */\n      swap2\n      pop\n        /* \"#utility.yul\":2602:2605   */\n      dup2\n        /* \"#utility.yul\":2595:2605   */\n      swap1\n      pop\n        /* \"#utility.yul\":2340:2611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122075aeb06c607e63d8659644c39c1c7ac017237e083414055820b4a1252cffae4f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405263a7c6047c60e01b6000806101000a81548163ffffffff021916908360e01c02179055506040518060400160405280601181526020017f66616b6546756e632875696e743235362900000000000000000000000000000081525080519060200120600060046101000a81548163ffffffff021916908360e01c021790555034801561008e57600080fd5b5061045b8061009e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063863dabb414610051578063b04bd97f1461006f578063b923b37014610079578063fd60d28414610097575b600080fd5b6100596100a1565b604051610066919061030c565b60405180910390f35b6100776100b9565b005b6100816101b6565b60405161008e919061030c565b60405180910390f35b61009f6101ce565b005b736dfc34609a05bc22319fa4cce1d1e2929548c0d781565b60008073b0eda4f836af0f8ca667700c42fcefa0742ae2b573ffffffffffffffffffffffffffffffffffffffff1663a7c52d6e60e01b60016040516024016101019190610379565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161016b919061040e565b6000604051808303816000865af19150503d80600081146101a8576040519150601f19603f3d011682016040523d82523d6000602084013e6101ad565b606091505b50915091505050565b73b0eda4f836af0f8ca667700c42fcefa0742ae2b581565b60008073b0eda4f836af0f8ca667700c42fcefa0742ae2b573ffffffffffffffffffffffffffffffffffffffff1663a7c6047c60e01b60016040516024016102169190610379565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610280919061040e565b6000604051808303816000865af19150503d80600081146102bd576040519150601f19603f3d011682016040523d82523d6000602084013e6102c2565b606091505b50915091505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f6826102cb565b9050919050565b610306816102eb565b82525050565b600060208201905061032160008301846102fd565b92915050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061036361035e61035984610327565b61033e565b610331565b9050919050565b61037381610348565b82525050565b600060208201905061038e600083018461036a565b92915050565b600081519050919050565b600081905092915050565b60005b838110156103c85780820151818401526020810190506103ad565b838111156103d7576000848401525b50505050565b60006103e882610394565b6103f2818561039f565b93506104028185602086016103aa565b80840191505092915050565b600061041a82846103dd565b91508190509291505056fea264697066735822122075aeb06c607e63d8659644c39c1c7ac017237e083414055820b4a1252cffae4f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0xA7C6047C PUSH1 0xE0 SHL PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xE0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x66616B6546756E632875696E7432353629000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xE0 SHR MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B DUP1 PUSH2 0x9E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x863DABB4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB04BD97F EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xB923B370 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xFD60D284 EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x81 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x1CE JUMP JUMPDEST STOP JUMPDEST PUSH20 0x6DFC34609A05BC22319FA4CCE1D1E2929548C0D7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xB0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA7C52D6E PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP POP POP JUMP JUMPDEST PUSH20 0xB0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xB0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA7C6047C PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6 DUP3 PUSH2 0x2CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x306 DUP2 PUSH2 0x2EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x321 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35E PUSH2 0x359 DUP5 PUSH2 0x327 JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x373 DUP2 PUSH2 0x348 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x36A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x3F2 DUP2 DUP6 PUSH2 0x39F JUMP JUMPDEST SWAP4 POP PUSH2 0x402 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A DUP3 DUP5 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xAEB06C607E63D8659644C39C1C7AC017237E08341405 PC KECCAK256 0xB4 LOG1 0x25 0x2C SELFDESTRUCT 0xAE 0x4F PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "114:865:0:-:0;;;377:28;;;359:46;;;;;;;;;;;;;;;;;;;;453:26;;;;;;;;;;;;;;;;;443:37;;;;;;411:70;;;;;;;;;;;;;;;;;;;;114:865;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CALLEE_9": {
									"entryPoint": 438,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CALLER_6": {
									"entryPoint": 161,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@anotherDopeFunction_63": {
									"entryPoint": 462,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dopeFunction_44": {
									"entryPoint": 185,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2614:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "656:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "667:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "656:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "628:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "638:7:2",
														"type": ""
													}
												],
												"src": "593:85:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "727:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "737:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "752:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "737:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "709:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "719:7:2",
														"type": ""
													}
												],
												"src": "684:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "808:28:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "818:12:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "825:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "794:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "804:3:2",
														"type": ""
													}
												],
												"src": "776:60:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "908:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "918:72:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "982:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "956:25:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "956:32:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "947:8:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:42:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "931:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:59:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "918:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "888:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "898:9:2",
														"type": ""
													}
												],
												"src": "842:154:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:72:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1090:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1132:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1095:36:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:43:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:56:2"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1061:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1068:3:2",
														"type": ""
													}
												],
												"src": "1002:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1255:130:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1265:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1277:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1273:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1265:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1351:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1364:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1375:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1360:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1360:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1301:49:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1301:77:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1301:77:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1227:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1239:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1250:4:2",
														"type": ""
													}
												],
												"src": "1151:234:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1460:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1432:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1442:6:2",
														"type": ""
													}
												],
												"src": "1391:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1608:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1618:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1633:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1618:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1580:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1585:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1596:11:2",
														"type": ""
													}
												],
												"src": "1495:147:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1697:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1707:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1716:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1711:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1801:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1806:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1797:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1797:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1820:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1825:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1816:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1816:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1810:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1810:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1790:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1790:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1790:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1737:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1740:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1734:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1748:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1750:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1759:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1762:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1755:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1755:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1750:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1730:3:2",
																"statements": []
															},
															"src": "1726:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1873:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1923:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1928:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1919:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1919:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1937:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1912:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1912:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1912:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1854:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1857:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1851:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:13:2"
															},
															"nodeType": "YulIf",
															"src": "1848:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1679:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1684:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1689:6:2",
														"type": ""
													}
												],
												"src": "1648:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2069:265:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2079:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2125:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2093:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2083:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2140:95:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2223:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2228:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2147:75:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:88:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2140:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2270:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2277:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2266:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2284:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2289:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2244:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2244:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2305:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2316:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2321:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2312:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2050:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2057:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2065:3:2",
														"type": ""
													}
												],
												"src": "1961:373:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2474:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2485:100:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2572:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2581:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2492:79:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:93:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2485:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2595:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2602:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2595:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2453:3:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2459:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2470:3:2",
														"type": ""
													}
												],
												"src": "2340:271:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063863dabb414610051578063b04bd97f1461006f578063b923b37014610079578063fd60d28414610097575b600080fd5b6100596100a1565b604051610066919061030c565b60405180910390f35b6100776100b9565b005b6100816101b6565b60405161008e919061030c565b60405180910390f35b61009f6101ce565b005b736dfc34609a05bc22319fa4cce1d1e2929548c0d781565b60008073b0eda4f836af0f8ca667700c42fcefa0742ae2b573ffffffffffffffffffffffffffffffffffffffff1663a7c52d6e60e01b60016040516024016101019190610379565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161016b919061040e565b6000604051808303816000865af19150503d80600081146101a8576040519150601f19603f3d011682016040523d82523d6000602084013e6101ad565b606091505b50915091505050565b73b0eda4f836af0f8ca667700c42fcefa0742ae2b581565b60008073b0eda4f836af0f8ca667700c42fcefa0742ae2b573ffffffffffffffffffffffffffffffffffffffff1663a7c6047c60e01b60016040516024016102169190610379565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610280919061040e565b6000604051808303816000865af19150503d80600081146102bd576040519150601f19603f3d011682016040523d82523d6000602084013e6102c2565b606091505b50915091505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f6826102cb565b9050919050565b610306816102eb565b82525050565b600060208201905061032160008301846102fd565b92915050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061036361035e61035984610327565b61033e565b610331565b9050919050565b61037381610348565b82525050565b600060208201905061038e600083018461036a565b92915050565b600081519050919050565b600081905092915050565b60005b838110156103c85780820151818401526020810190506103ad565b838111156103d7576000848401525b50505050565b60006103e882610394565b6103f2818561039f565b93506104028185602086016103aa565b80840191505092915050565b600061041a82846103dd565b91508190509291505056fea264697066735822122075aeb06c607e63d8659644c39c1c7ac017237e083414055820b4a1252cffae4f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x863DABB4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB04BD97F EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xB923B370 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xFD60D284 EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x81 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x1CE JUMP JUMPDEST STOP JUMPDEST PUSH20 0x6DFC34609A05BC22319FA4CCE1D1E2929548C0D7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xB0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA7C52D6E PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP POP POP JUMP JUMPDEST PUSH20 0xB0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xB0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA7C6047C PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6 DUP3 PUSH2 0x2CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x306 DUP2 PUSH2 0x2EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x321 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35E PUSH2 0x359 DUP5 PUSH2 0x327 JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x373 DUP2 PUSH2 0x348 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x36A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x3F2 DUP2 DUP6 PUSH2 0x39F JUMP JUMPDEST SWAP4 POP PUSH2 0x402 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A DUP3 DUP5 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xAEB06C607E63D8659644C39C1C7AC017237E08341405 PC KECCAK256 0xB4 LOG1 0x25 0x2C SELFDESTRUCT 0xAE 0x4F PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "114:865:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;140:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;492:236;;;:::i;:::-;;221:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;734:243;;;:::i;:::-;;140:75;173:42;140:75;:::o;492:236::-;618:12;632:17;254:42;653:11;;688:28;;;718:1;665:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:104;;;;523:205;;492:236::o;221:75::-;254:42;221:75;:::o;734:243::-;867:12;881:17;254:42;902:11;;937:28;;;967:1;914:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:104;;;;772:205;;734:243::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:85::-;638:7;667:5;656:16;;593:85;;;:::o;684:86::-;719:7;759:4;752:5;748:16;737:27;;684:86;;;:::o;776:60::-;804:3;825:5;818:12;;776:60;;;:::o;842:154::-;898:9;931:59;947:42;956:32;982:5;956:32;:::i;:::-;947:42;:::i;:::-;931:59;:::i;:::-;918:72;;842:154;;;:::o;1002:143::-;1095:43;1132:5;1095:43;:::i;:::-;1090:3;1083:56;1002:143;;:::o;1151:234::-;1250:4;1288:2;1277:9;1273:18;1265:26;;1301:77;1375:1;1364:9;1360:17;1351:6;1301:77;:::i;:::-;1151:234;;;;:::o;1391:98::-;1442:6;1476:5;1470:12;1460:22;;1391:98;;;:::o;1495:147::-;1596:11;1633:3;1618:18;;1495:147;;;;:::o;1648:307::-;1716:1;1726:113;1740:6;1737:1;1734:13;1726:113;;;1825:1;1820:3;1816:11;1810:18;1806:1;1801:3;1797:11;1790:39;1762:2;1759:1;1755:10;1750:15;;1726:113;;;1857:6;1854:1;1851:13;1848:101;;;1937:1;1928:6;1923:3;1919:16;1912:27;1848:101;1697:258;1648:307;;;:::o;1961:373::-;2065:3;2093:38;2125:5;2093:38;:::i;:::-;2147:88;2228:6;2223:3;2147:88;:::i;:::-;2140:95;;2244:52;2289:6;2284:3;2277:4;2270:5;2266:16;2244:52;:::i;:::-;2321:6;2316:3;2312:16;2305:23;;2069:265;1961:373;;;;:::o;2340:271::-;2470:3;2492:93;2581:3;2572:6;2492:93;:::i;:::-;2485:100;;2602:3;2595:10;;2340:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "223000",
								"executionCost": "48951",
								"totalCost": "271951"
							},
							"external": {
								"CALLEE()": "400",
								"CALLER()": "356",
								"anotherDopeFunction()": "infinite",
								"dopeFunction()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 979,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "A7C6047C"
								},
								{
									"begin": 377,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 377,
									"end": 405,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 359,
									"end": 405,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 359,
									"end": 405,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 359,
									"end": 405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 359,
									"end": 405,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 453,
									"end": 479,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 453,
									"end": 479,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 453,
									"end": 479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 453,
									"end": 479,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 453,
									"end": 479,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "PUSH",
									"source": 0,
									"value": "66616B6546756E632875696E7432353629000000000000000000000000000000"
								},
								{
									"begin": 453,
									"end": 479,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 453,
									"end": 479,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 443,
									"end": 480,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 443,
									"end": 480,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 443,
									"end": 480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 443,
									"end": 480,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 443,
									"end": 480,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 443,
									"end": 480,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 411,
									"end": 481,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 411,
									"end": 481,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 411,
									"end": 481,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 411,
									"end": 481,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 114,
									"end": 979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 979,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075aeb06c607e63d8659644c39c1c7ac017237e083414055820b4a1252cffae4f64736f6c634300080d0033",
									".code": [
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "863DABB4"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "B04BD97F"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "B923B370"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FD60D284"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 492,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 492,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 492,
											"end": 728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 492,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 492,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 728,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 734,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 734,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 734,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 734,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 734,
											"end": 977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 734,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 734,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 734,
											"end": 977,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 215,
											"name": "PUSH",
											"source": 0,
											"value": "6DFC34609A05BC22319FA4CCE1D1E2929548C0D7"
										},
										{
											"begin": 140,
											"end": 215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 492,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 492,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "B0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 688,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "A7C52D6E"
										},
										{
											"begin": 688,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 688,
											"end": 716,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 718,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 653,
											"end": 721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 617,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 617,
											"end": 721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 728,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "B0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5"
										},
										{
											"begin": 221,
											"end": 296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 221,
											"end": 296,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 734,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 734,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 867,
											"end": 879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "B0EDA4F836AF0F8CA667700C42FCEFA0742AE2B5"
										},
										{
											"begin": 902,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 937,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "A7C6047C"
										},
										{
											"begin": 937,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 937,
											"end": 965,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 967,
											"end": 968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 902,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 866,
											"end": 970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 866,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 866,
											"end": 970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 866,
											"end": 970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 772,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 772,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 734,
											"end": 977,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 593,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 593,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 638,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 656,
											"end": 672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 678,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 593,
											"end": 678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 593,
											"end": 678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 678,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 684,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 684,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 748,
											"end": 764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 737,
											"end": 764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 684,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 684,
											"end": 770,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 776,
											"end": 836,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 776,
											"end": 836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 804,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 818,
											"end": 830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 818,
											"end": 830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 776,
											"end": 836,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 776,
											"end": 836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 776,
											"end": 836,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 842,
											"end": 996,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 842,
											"end": 996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 947,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 982,
											"end": 987,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 956,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 956,
											"end": 988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 947,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 947,
											"end": 989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 989,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 947,
											"end": 989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 931,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 931,
											"end": 990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 931,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 918,
											"end": 990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 918,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 842,
											"end": 996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 996,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1002,
											"end": 1145,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1002,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1095,
											"end": 1138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1095,
											"end": 1138,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1095,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1145,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1151,
											"end": 1385,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1373,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1301,
											"end": 1378,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1378,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1301,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1385,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1385,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1391,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1489,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1495,
											"end": 1642,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1495,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1642,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1642,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1648,
											"end": 1955,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1648,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1747,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1823,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1726,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1864,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1949,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1848,
											"end": 1949,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1926,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1939,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1949,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1848,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1955,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1961,
											"end": 2334,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1961,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2125,
											"end": 2130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2131,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2093,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2228,
											"end": 2234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2147,
											"end": 2235,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2147,
											"end": 2235,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2147,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2235,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2284,
											"end": 2287,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2244,
											"end": 2296,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2244,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2327,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2319,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2334,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2334,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2340,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2340,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2581,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2611,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2611,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2611,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CALLEE()": "b923b370",
							"CALLER()": "863dabb4",
							"anotherDopeFunction()": "fd60d284",
							"dopeFunction()": "b04bd97f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CALLEE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"anotherDopeFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dopeFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":\"MockCall4\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol\":{\"keccak256\":\"0x8c9dab0cc3af1dc112383d956eed8261e9026f37a9a4b12ccc9fc418ce3edfea\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://752cf0459d9fe9e771fe1cb97e18311ab058894a1e025eb8035afdd3281b658e\",\"dweb:/ipfs/QmT3LCZm2Anpe2e6LirU61rcDT6MtVnhCfUyy6aNJ8gvDg\"]},\"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":{\"keccak256\":\"0xb3eb853222ee938e90b7a7208e3852fed0f91b974543205cac48ead419ec18d3\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://ccdc30845238e8ee85a08a35f24cff68182bf15672ad910cde798bc8e3176b12\",\"dweb:/ipfs/QmTkDeDoxXXXhr3GZKv6cJ2Jc1XQhStVWHtvZudN4gvz99\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 14,
								"contract": "Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol:MockCall4",
								"label": "selector",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes4"
							},
							{
								"astId": 25,
								"contract": "Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol:MockCall4",
								"label": "anotherSelector",
								"offset": 4,
								"slot": "0",
								"type": "t_bytes4"
							}
						],
						"types": {
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol": {
				"MockCallee": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "coolFunc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "fakeFunc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "niceFunc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "weirdFunc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":66:544  contract MockCallee {... */\n  mstore(0x40, 0x80)\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":108:109  0 */\n  0x00\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":93:109  uint coolNum = 0 */\n  dup1\n  sstore\n    /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":66:544  contract MockCallee {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":66:544  contract MockCallee {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x69a0cdaf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa7c52d6e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa7c6047c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf1db7cdc\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":439:542  function weirdFunc(uint256 num) public returns (uint) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":223:325  function niceFunc(uint256 num) public returns (uint) {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":331:433  function coolFunc(uint256 num) public returns (uint) {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":116:217  function fakeFunc(uint256 num) public returns (uint) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":439:542  function weirdFunc(uint256 num) public returns (uint) {... */\n    tag_10:\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":487:491  uint */\n      0x00\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":514:517  num */\n      dup2\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":503:510  coolNum */\n      0x00\n      dup1\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":503:517  coolNum += num */\n      dup3\n      dup3\n      sload\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":534:535  2 */\n      0x02\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":527:535  return 2 */\n      swap1\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":439:542  function weirdFunc(uint256 num) public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":223:325  function niceFunc(uint256 num) public returns (uint) {... */\n    tag_15:\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":270:274  uint */\n      0x00\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":297:300  num */\n      dup2\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":286:293  coolNum */\n      0x00\n      dup1\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":286:300  coolNum += num */\n      dup3\n      dup3\n      sload\n      tag_29\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_29:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":317:318  2 */\n      0x02\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":310:318  return 2 */\n      swap1\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":223:325  function niceFunc(uint256 num) public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":331:433  function coolFunc(uint256 num) public returns (uint) {... */\n    tag_19:\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":378:382  uint */\n      0x00\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":405:408  num */\n      dup2\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":394:401  coolNum */\n      0x00\n      dup1\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":394:408  coolNum += num */\n      dup3\n      dup3\n      sload\n      tag_31\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_31:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":425:426  1 */\n      0x01\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":418:426  return 1 */\n      swap1\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":331:433  function coolFunc(uint256 num) public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":116:217  function fakeFunc(uint256 num) public returns (uint) {... */\n    tag_23:\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":163:167  uint */\n      0x00\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":189:192  num */\n      dup2\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":179:186  coolNum */\n      0x00\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":179:192  coolNum = num */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":209:210  1 */\n      0x01\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":202:210  return 1 */\n      swap1\n      pop\n        /* \"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":116:217  function fakeFunc(uint256 num) public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_36:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_37:\n        /* \"#utility.yul\":490:514   */\n      tag_47\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_48:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_38:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_50\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_37\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_53\n      tag_34\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":766:885   */\n    tag_52:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_54\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_38\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_39:\n        /* \"#utility.yul\":1112:1136   */\n      tag_56\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_12:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_58\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_39\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1557   */\n    tag_40:\n        /* \"#utility.yul\":1425:1502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1415:1503   */\n      mstore\n        /* \"#utility.yul\":1522:1526   */\n      0x11\n        /* \"#utility.yul\":1519:1520   */\n      0x04\n        /* \"#utility.yul\":1512:1527   */\n      mstore\n        /* \"#utility.yul\":1546:1550   */\n      0x24\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1536:1551   */\n      revert\n        /* \"#utility.yul\":1563:1868   */\n    tag_27:\n        /* \"#utility.yul\":1603:1606   */\n      0x00\n        /* \"#utility.yul\":1622:1642   */\n      tag_61\n        /* \"#utility.yul\":1640:1641   */\n      dup3\n        /* \"#utility.yul\":1622:1642   */\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1617:1642   */\n      swap2\n      pop\n        /* \"#utility.yul\":1656:1676   */\n      tag_62\n        /* \"#utility.yul\":1674:1675   */\n      dup4\n        /* \"#utility.yul\":1656:1676   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1651:1676   */\n      swap3\n      pop\n        /* \"#utility.yul\":1810:1811   */\n      dup3\n        /* \"#utility.yul\":1742:1808   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1738:1812   */\n      sub\n        /* \"#utility.yul\":1735:1736   */\n      dup3\n        /* \"#utility.yul\":1732:1813   */\n      gt\n        /* \"#utility.yul\":1729:1836   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1816:1834   */\n      tag_64\n      tag_40\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1729:1836   */\n    tag_63:\n        /* \"#utility.yul\":1860:1861   */\n      dup3\n        /* \"#utility.yul\":1857:1858   */\n      dup3\n        /* \"#utility.yul\":1853:1862   */\n      add\n        /* \"#utility.yul\":1846:1862   */\n      swap1\n      pop\n        /* \"#utility.yul\":1563:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e32e5cf8449f5fb60e97fa66f866ea5f46ad8a16697a4b9c31cb53c08c3844c864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000805534801561001457600080fd5b506102d9806100246000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806369a0cdaf14610051578063a7c52d6e14610081578063a7c6047c146100b1578063f1db7cdc146100e1575b600080fd5b61006b600480360381019061006691906101c7565b610111565b6040516100789190610203565b60405180910390f35b61009b600480360381019061009691906101c7565b610134565b6040516100a89190610203565b60405180910390f35b6100cb60048036038101906100c691906101c7565b610157565b6040516100d89190610203565b60405180910390f35b6100fb60048036038101906100f691906101c7565b61017a565b6040516101089190610203565b60405180910390f35b600081600080828254610124919061024d565b9250508190555060029050919050565b600081600080828254610147919061024d565b9250508190555060029050919050565b60008160008082825461016a919061024d565b9250508190555060019050919050565b60008160008190555060019050919050565b600080fd5b6000819050919050565b6101a481610191565b81146101af57600080fd5b50565b6000813590506101c18161019b565b92915050565b6000602082840312156101dd576101dc61018c565b5b60006101eb848285016101b2565b91505092915050565b6101fd81610191565b82525050565b600060208201905061021860008301846101f4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061025882610191565b915061026383610191565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102985761029761021e565b5b82820190509291505056fea2646970667358221220e32e5cf8449f5fb60e97fa66f866ea5f46ad8a16697a4b9c31cb53c08c3844c864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69A0CDAF EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xA7C52D6E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xA7C6047C EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF1DB7CDC EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x191 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C1 DUP2 PUSH2 0x19B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1DC PUSH2 0x18C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EB DUP5 DUP3 DUP6 ADD PUSH2 0x1B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FD DUP2 PUSH2 0x191 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x218 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x258 DUP3 PUSH2 0x191 JUMP JUMPDEST SWAP2 POP PUSH2 0x263 DUP4 PUSH2 0x191 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x298 JUMPI PUSH2 0x297 PUSH2 0x21E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x2E 0x5C 0xF8 DIFFICULTY SWAP16 0x5F 0xB6 0xE SWAP8 STATICCALL PUSH7 0xF866EA5F46AD8A AND PUSH10 0x7A4B9C31CB53C08C3844 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "66:478:1:-:0;;;108:1;93:16;;66:478;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@coolFunc_111": {
									"entryPoint": 343,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@fakeFunc_83": {
									"entryPoint": 378,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@niceFunc_97": {
									"entryPoint": 308,
									"id": 97,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@weirdFunc_125": {
									"entryPoint": 273,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1871:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:2",
														"type": ""
													}
												],
												"src": "1025:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:2",
														"type": ""
													}
												],
												"src": "1149:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1405:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1415:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1522:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1546:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1377:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1607:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1617:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1640:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1622:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1622:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1617:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1651:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1674:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1656:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1651:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1814:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1816:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1816:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1816:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1735:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1742:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1810:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1738:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1738:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1732:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:81:2"
															},
															"nodeType": "YulIf",
															"src": "1729:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1846:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1857:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1860:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1846:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1594:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1597:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1603:3:2",
														"type": ""
													}
												],
												"src": "1563:305:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806369a0cdaf14610051578063a7c52d6e14610081578063a7c6047c146100b1578063f1db7cdc146100e1575b600080fd5b61006b600480360381019061006691906101c7565b610111565b6040516100789190610203565b60405180910390f35b61009b600480360381019061009691906101c7565b610134565b6040516100a89190610203565b60405180910390f35b6100cb60048036038101906100c691906101c7565b610157565b6040516100d89190610203565b60405180910390f35b6100fb60048036038101906100f691906101c7565b61017a565b6040516101089190610203565b60405180910390f35b600081600080828254610124919061024d565b9250508190555060029050919050565b600081600080828254610147919061024d565b9250508190555060029050919050565b60008160008082825461016a919061024d565b9250508190555060019050919050565b60008160008190555060019050919050565b600080fd5b6000819050919050565b6101a481610191565b81146101af57600080fd5b50565b6000813590506101c18161019b565b92915050565b6000602082840312156101dd576101dc61018c565b5b60006101eb848285016101b2565b91505092915050565b6101fd81610191565b82525050565b600060208201905061021860008301846101f4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061025882610191565b915061026383610191565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102985761029761021e565b5b82820190509291505056fea2646970667358221220e32e5cf8449f5fb60e97fa66f866ea5f46ad8a16697a4b9c31cb53c08c3844c864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69A0CDAF EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xA7C52D6E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xA7C6047C EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF1DB7CDC EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x24D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x191 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C1 DUP2 PUSH2 0x19B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1DC PUSH2 0x18C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EB DUP5 DUP3 DUP6 ADD PUSH2 0x1B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FD DUP2 PUSH2 0x191 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x218 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x258 DUP3 PUSH2 0x191 JUMP JUMPDEST SWAP2 POP PUSH2 0x263 DUP4 PUSH2 0x191 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x298 JUMPI PUSH2 0x297 PUSH2 0x21E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x2E 0x5C 0xF8 DIFFICULTY SWAP16 0x5F 0xB6 0xE SWAP8 STATICCALL PUSH7 0xF866EA5F46AD8A AND PUSH10 0x7A4B9C31CB53C08C3844 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "66:478:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;223:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;116:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:103;487:4;514:3;503:7;;:14;;;;;;;:::i;:::-;;;;;;;;534:1;527:8;;439:103;;;:::o;223:102::-;270:4;297:3;286:7;;:14;;;;;;;:::i;:::-;;;;;;;;317:1;310:8;;223:102;;;:::o;331:::-;378:4;405:3;394:7;;:14;;;;;;;:::i;:::-;;;;;;;;425:1;418:8;;331:102;;;:::o;116:101::-;163:4;189:3;179:7;:13;;;;209:1;202:8;;116:101;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:180::-;1425:77;1422:1;1415:88;1522:4;1519:1;1512:15;1546:4;1543:1;1536:15;1563:305;1603:3;1622:20;1640:1;1622:20;:::i;:::-;1617:25;;1656:20;1674:1;1656:20;:::i;:::-;1651:25;;1810:1;1742:66;1738:74;1735:1;1732:81;1729:107;;;1816:18;;:::i;:::-;1729:107;1860:1;1857;1853:9;1846:16;;1563:305;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "145800",
								"executionCost": "5196",
								"totalCost": "150996"
							},
							"external": {
								"coolFunc(uint256)": "infinite",
								"fakeFunc(uint256)": "infinite",
								"niceFunc(uint256)": "infinite",
								"weirdFunc(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 544,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 108,
									"end": 109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 109,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 109,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 66,
									"end": 544,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 544,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e32e5cf8449f5fb60e97fa66f866ea5f46ad8a16697a4b9c31cb53c08c3844c864736f6c634300080d0033",
									".code": [
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "69A0CDAF"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "A7C52D6E"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "A7C6047C"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "F1DB7CDC"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 544,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 503,
											"end": 517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 503,
											"end": 517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 503,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 527,
											"end": 535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 527,
											"end": 535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 439,
											"end": 542,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 286,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 286,
											"end": 300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 286,
											"end": 300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 286,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 286,
											"end": 300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 378,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 394,
											"end": 408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 394,
											"end": 408,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 408,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 394,
											"end": 408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 394,
											"end": 408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 426,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 418,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 331,
											"end": 433,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 179,
											"end": 186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 179,
											"end": 192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 192,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 179,
											"end": 192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 210,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1502,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1503,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1527,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1622,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1656,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1813,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1816,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1729,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1868,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"coolFunc(uint256)": "a7c6047c",
							"fakeFunc(uint256)": "f1db7cdc",
							"niceFunc(uint256)": "a7c52d6e",
							"weirdFunc(uint256)": "69a0cdaf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"coolFunc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"fakeFunc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"niceFunc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"weirdFunc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":\"MockCallee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol\":{\"keccak256\":\"0xb3eb853222ee938e90b7a7208e3852fed0f91b974543205cac48ead419ec18d3\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://ccdc30845238e8ee85a08a35f24cff68182bf15672ad910cde798bc8e3176b12\",\"dweb:/ipfs/QmTkDeDoxXXXhr3GZKv6cJ2Jc1XQhStVWHtvZudN4gvz99\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 69,
								"contract": "Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol:MockCallee",
								"label": "coolNum",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol:17:10:\n   |\n17 |         (bool success, bytes memory data) = CALLEE.call(abi.encodeWithSelector(MockCallee.niceFunc.selector, 1));\n   |          ^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 630,
					"file": "Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol",
					"start": 618
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol:17:24:\n   |\n17 |         (bool success, bytes memory data) = CALLEE.call(abi.encodeWithSelector(MockCallee.niceFunc.selector, 1));\n   |                        ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 649,
					"file": "Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol",
					"start": 632
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol:22:10:\n   |\n22 |         (bool success, bytes memory data) = CALLEE.call(abi.encodeWithSelector(MockCallee.coolFunc.selector, 1));\n   |          ^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 879,
					"file": "Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol",
					"start": 867
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol:22:24:\n   |\n22 |         (bool success, bytes memory data) = CALLEE.call(abi.encodeWithSelector(MockCallee.coolFunc.selector, 1));\n   |                        ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 898,
					"file": "Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol",
					"start": 881
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol": {
				"ast": {
					"absolutePath": "Users/n2000/dev/seeds/test/mocks/call/MockCall4.sol",
					"exportedSymbols": {
						"MockCall4": [
							64
						],
						"MockCallee": [
							126
						]
					},
					"id": 65,
					"license": "MIT License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:0"
						},
						{
							"absolutePath": "Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol",
							"file": "./MockCallee.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 65,
							"sourceUnit": 127,
							"src": "66:46:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "MockCallee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 126,
										"src": "75:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MockCall4",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "MockCall4",
							"nameLocation": "123:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "863dabb4",
									"id": 6,
									"mutability": "constant",
									"name": "CALLER",
									"nameLocation": "164:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "140:75:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836646663333436303961303562433232333139664134436365316431453239323935343863304437",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "173:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6dfc34609a05bC22319fA4Cce1d1E2929548c0D7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b923b370",
									"id": 9,
									"mutability": "constant",
									"name": "CALLEE",
									"nameLocation": "245:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "221:75:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307862304564413466383336614630463843613636373730306334326663454641303734326165324235",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "254:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xb0EdA4f836aF0F8Ca667700c42fcEFA0742ae2B5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "selector",
									"nameLocation": "366:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "359:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 10,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "359:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"expression": {
											"expression": {
												"id": 11,
												"name": "MockCallee",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 126,
												"src": "377:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_MockCallee_$126_$",
													"typeString": "type(contract MockCallee)"
												}
											},
											"id": 12,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberName": "coolFunc",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 111,
											"src": "377:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_uint256_$",
												"typeString": "function MockCallee.coolFunc(uint256) returns (uint256)"
											}
										},
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "selector",
										"nodeType": "MemberAccess",
										"src": "377:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "anotherSelector",
									"nameLocation": "418:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "411:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 15,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "411:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"hexValue": "66616b6546756e632875696e7432353629",
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "459:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f1db7cdcac44fe9d2991760584d2cc4466b517ee3af7efa7ffc860e6114e5442",
																	"typeString": "literal_string \"fakeFunc(uint256)\""
																},
																"value": "fakeFunc(uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_f1db7cdcac44fe9d2991760584d2cc4466b517ee3af7efa7ffc860e6114e5442",
																	"typeString": "literal_string \"fakeFunc(uint256)\""
																}
															],
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "453:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 19,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "453:5:0",
																"typeDescriptions": {}
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "453:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 18,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967288,
													"src": "443:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 23,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "443:37:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 17,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "436:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 16,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "436:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "436:45:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "523:205:0",
										"statements": [
											{
												"assignments": [
													29,
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "623:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "618:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 28,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "618:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 31,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "645:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "632:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 30,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "632:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 36,
																			"name": "MockCallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "688:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_MockCallee_$126_$",
																				"typeString": "type(contract MockCallee)"
																			}
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "niceFunc",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 97,
																		"src": "688:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function MockCallee.niceFunc(uint256) returns (uint256)"
																		}
																	},
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "688:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"hexValue": "31",
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "718:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"id": 34,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "665:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "665:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "665:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 32,
															"name": "CALLEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "653:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "653:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "617:104:0"
											}
										]
									},
									"functionSelector": "b04bd97f",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dopeFunction",
									"nameLocation": "501:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:0:0"
									},
									"scope": 64,
									"src": "492:236:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "772:205:0",
										"statements": [
											{
												"assignments": [
													48,
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "872:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "867:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 47,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "867:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "894:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "881:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 49,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 55,
																			"name": "MockCallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "937:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_MockCallee_$126_$",
																				"typeString": "type(contract MockCallee)"
																			}
																		},
																		"id": 56,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "coolFunc",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 111,
																		"src": "937:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function MockCallee.coolFunc(uint256) returns (uint256)"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "937:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"hexValue": "31",
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "967:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"id": 53,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "914:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "914:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "914:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 51,
															"name": "CALLEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "902:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "902:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "866:104:0"
											}
										]
									},
									"functionSelector": "fd60d284",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "anotherDopeFunction",
									"nameLocation": "743:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "772:0:0"
									},
									"scope": 64,
									"src": "734:243:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 65,
							"src": "114:865:0",
							"usedErrors": []
						}
					],
					"src": "40:939:0"
				},
				"id": 0
			},
			"Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol": {
				"ast": {
					"absolutePath": "Users/n2000/dev/seeds/test/mocks/call/MockCallee.sol",
					"exportedSymbols": {
						"MockCallee": [
							126
						]
					},
					"id": 127,
					"license": "MIT License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MockCallee",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "MockCallee",
							"nameLocation": "75:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 69,
									"mutability": "mutable",
									"name": "coolNum",
									"nameLocation": "98:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "93:16:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 67,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "93:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "108:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "169:48:1",
										"statements": [
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "coolNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "179:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "189:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "179:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "179:13:1"
											},
											{
												"expression": {
													"hexValue": "31",
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "209:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 75,
												"id": 81,
												"nodeType": "Return",
												"src": "202:8:1"
											}
										]
									},
									"functionSelector": "f1db7cdc",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fakeFunc",
									"nameLocation": "125:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "142:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "134:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:13:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "163:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "163:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "162:6:1"
									},
									"scope": 126,
									"src": "116:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "276:49:1",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "coolNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "286:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 91,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "297:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "286:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "286:14:1"
											},
											{
												"expression": {
													"hexValue": "32",
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "317:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"functionReturnParameters": 89,
												"id": 95,
												"nodeType": "Return",
												"src": "310:8:1"
											}
										]
									},
									"functionSelector": "a7c52d6e",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "niceFunc",
									"nameLocation": "232:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "249:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "241:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:13:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "270:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "270:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:6:1"
									},
									"scope": 126,
									"src": "223:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "384:49:1",
										"statements": [
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 104,
														"name": "coolNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "394:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 105,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "405:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "394:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "394:14:1"
											},
											{
												"expression": {
													"hexValue": "31",
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "425:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 103,
												"id": 109,
												"nodeType": "Return",
												"src": "418:8:1"
											}
										]
									},
									"functionSelector": "a7c6047c",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "coolFunc",
									"nameLocation": "340:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "357:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "349:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:13:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "378:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:6:1"
									},
									"scope": 126,
									"src": "331:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "493:49:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "coolNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "503:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 119,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "514:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "503:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "503:14:1"
											},
											{
												"expression": {
													"hexValue": "32",
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "534:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"functionReturnParameters": 117,
												"id": 123,
												"nodeType": "Return",
												"src": "527:8:1"
											}
										]
									},
									"functionSelector": "69a0cdaf",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weirdFunc",
									"nameLocation": "448:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "466:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "458:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:13:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "487:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:6:1"
									},
									"scope": 126,
									"src": "439:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 127,
							"src": "66:478:1",
							"usedErrors": []
						}
					],
					"src": "40:504:1"
				},
				"id": 1
			}
		}
	}
}